name: Code Architecture Check

on:
  workflow_dispatch:

jobs:
  run_code_architecture_checker_ai_agent:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    strategy:
      max-parallel: 1
      matrix:
        target:
          - project_name: "simple-express-crud"
            folder_path: "examples/simple-express-crud"
            llm_provider: "gemini"
            target_files: "*.js"
          - project_name: "kindlefy"
            folder_path: "examples/kindlefy"
            llm_provider: "gemini"
            target_files: "*.ts"
          - project_name: "investy"
            folder_path: "examples/investy"
            llm_provider: "gemini"
            target_files: "*.ts *.tsx"
          - project_name: "alexa-skills"
            folder_path: "examples/alexa-skills"
            llm_provider: "gemini"
            target_files: "*.ts"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install LLM Agent Dependencies
        run: |
          pip install openai
          pip install google-generativeai

      - name: Generate Architecture Description with LLM
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          patterns=(${{ matrix.target.target_files }})
          find_cmd="find ${{ matrix.target.folder_path }} -type f"

          for pattern in "${patterns[@]}"; do
            find_cmd+=" -o -name \"$pattern\""
          done

          find_cmd=$(echo "$find_cmd" | sed 's/-o -name/-name/')
          all_files=$(eval "$find_cmd")

          python3 ai-agents/code-architecture-checker/run.py --provider ${{ matrix.target.llm_provider }} $all_files > ai-agents/code-architecture-checker/outputs/${{ matrix.target.project_name }}-architecture-description.md

      - name: Commit and Push Architecture Description
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          git add ai-agents/code-architecture-checker/outputs/${{ matrix.target.project_name }}-architecture-description.md
          git commit -m "chore: update ${{ matrix.target.project_name }} architecture pattern result" || echo "No changes to commit"
          
          git pull --rebase https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} main
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main
